(function(){function a(a,b,c){const d=performance.now();return new Promise((e)=>{a.addEventListener('message',function b(c){c.data.id!==d||(a.removeEventListener('message',b),e(c))}),a.postMessage(Object.assign(b,{id:d}),c)})}function b(a){let b=[];return new Proxy(function(){},{construct(c,d){const e=a('CONSTRUCT',b,d);return b=[],e},async apply(c,d,e){const f=a('APPLY',b,e);return b=[],f},get(c,d,e){if('then'===d&&0===b.length)return{then:()=>e};if('then'===d){const c=a('GET',b);return b=[],Promise.resolve(c).then.bind(c)}return b.push(d),e}})}function c(a){return a instanceof ArrayBuffer||a instanceof MessagePort}function*d(a){if(a){const b=Object.values(a);yield*b;for(const a of b)yield*d(a)}}function e(a){return Array.from(d(a)).filter((a)=>c(a))}function f(a){const c=a&&a.__transfer_proxy_port;return c?b(g(c)):a}function g(c){return c.start(),async(d,h,i)=>{const j=await a(c,{type:d,callPath:h,argumentsList:i},e(i));return'CONSTRUCT'===d?b(g(j.data.result.port)):f(j.data.result)}}const h=new URL(document.currentScript.src),i=h.pathname.split('/');i.pop(),h.pathname=`${i.join('/')}/tasklet-worker-scope.min.js`,h.search='';const j=new Worker(h.toString());self.tasklets=new class{constructor(a){this._worker=a}async addModule(c){const d=await a(this._worker,{path:c});if('error'in d.data)throw console.error(d.data.stack),Error(d.data.error);const e=d.data.port;return b(g(e))}terminate(){this._worker.terminate()}}(j)})();
